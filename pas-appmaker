#!/usr/bin/env python
#coding: utf-8

'''
© Copyright 2013 Altair Engineering, Inc. All rights reserved.
This code is provided “as is” without any warranty, express or implied, or
indemnification of any kind. All other terms and conditions are as specified
in the Altair PBS Application Services EULA.
'''

import os
import sys
import re
import shutil

from optparse import OptionParser
from optparse import OptionGroup

import datetime

__version__ = '13.0.0-prototype1'


parser = OptionParser(usage='%prog <APPLICATION> [Options]',
                      version='%prog ' + __version__,
                      description='A simple framework for making powerful application definitions.')

parser.add_option("--app-home", dest="app_home",
                  metavar="$PAS_HOME/repository/applications",
                  default="/var/spool/pas/repository/applications",
                  help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                  'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

parser.add_option("--app-config", dest="app_config",
                  metavar="$PAS_HOME/conf/app-config",
                  default="/var/spool/pas/conf/app-config",
                  help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                  'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')


''' Resources '''

resources = OptionGroup(parser, "Resources",
                        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                        'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

resources.add_option('--select-statement',
                     dest='select_statement',
                     action='store_true',
                     default=False,
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                     'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

resources.add_option('--select',
                     dest='select',
                     action='store_true',
                     default=False,
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                     'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

resources.add_option('--ncpus',
                     dest='ncpus',
                     action='store_true',
                     default=False,
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                     'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

resources.add_option('--pcpus',
                     dest='pcpus',
                     action='store_true',
                     default=False,
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                     'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

resources.add_option('--mpiprocs',
                     dest='mpiprocs',
                     action='store_true',
                     default=False,
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                     'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

resources.add_option('--ompthreads',
                     dest='ompthreads',
                     action='store_true',
                     default=False,
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                     'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

resources.add_option('--mem',
                     dest='mem',
                     action='store_true',
                     default=False,
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                     'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

resources.add_option('--vmem',
                     dest='vmem',
                     action='store_true',
                     default=False,
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                     'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

resources.add_option('--walltime',
                     dest='walltime',
                     action='store_true',
                     default=False,
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                     'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

resources.add_option('--arch',
                     dest='arch',
                     action='store_true',
                     default=False,
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                     'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

resources.add_option('--place',
                     dest='place',
                     action='store_true',
                     default=False,
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                     'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

resources.add_option('--additional-resources',
                     dest='additional_resources',
                     action='store_true',
                     default=False,
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                     'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

parser.add_option_group(resources)


''' Attributes '''

attributes = OptionGroup(parser, "Attributes",
                         'Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                         'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

attributes.add_option('--depend',
                      dest='depend',
                      action='store_true',
                      default=False,
                      help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                      'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

attributes.add_option('--group-list',
                      dest='group_list',
                      action='store_true',
                      default=False,
                      help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                      'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

attributes.add_option('--additional-attributes',
                      dest='additional_attributes',
                      action='store_true',
                      default=False,
                      help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                      'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

parser.add_option_group(attributes)


''' Options '''

options = OptionGroup(parser, "Options",
                         "Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.")

options.add_option('--account',
                   dest='account',
                   action='store_true',
                   default=False,
                   help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                   'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

options.add_option('--queue',
                   dest='queue',
                   action='store_true',
                   default=False,
                   help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                   'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

options.add_option('--mail',
                   dest='mail',
                   action='store_true',
                   default=False,
                   help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                   'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

options.add_option('--job-arrays',
                   dest='job_arrays',
                   action='store_true',
                   default=False,
                   help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. '
                   'In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus.')

parser.add_option_group(options)


''' Execution '''

execution = OptionGroup(parser, "Execution",
                        "Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.")

execution.add_option('--application',
                     dest='application',
                     action='store_true',
                     default=False,
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

execution.add_option('--environment',
                     dest='environment',
                     action='store_true',
                     default=False,
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

execution.add_option('--executable',
                     dest='executable',
                     action='store_true',
                     default=False,
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

execution.add_option('--script',
                     dest='script',
                     action='store_true',
                     default=False,
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

execution.add_option('--arguments',
                     dest='arguments',
                     action='store_true',
                     default=False,
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

parser.add_option_group(execution)


''' Files '''

files = OptionGroup(parser, "Files",
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.")

files.add_option('--input-file',
                 dest='input_file',
                 action='store_true',
                 default=False,
                 help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

files.add_option('--master-file',
                 dest='master_file',
                 action='store_true',
                 default=False,
                 help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

files.add_option('--starter-file',
                 dest='starter_file',
                 action='store_true',
                 default=False,
                 help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

files.add_option('--engine-file',
                 dest='engine_file',
                 action='store_true',
                 default=False,
                 help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

files.add_option('--include-files',
                 dest='include_files',
                 action='store_true',
                 default=False,
                 help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

files.add_option('--compress-results',
                 dest='compress_results',
                 action='store_true',
                 default=False,
                 help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

parser.add_option_group(files)


''' Actions '''

actions = OptionGroup(parser, "Actions",
                      "Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.")

actions.add_option('--send-signals',
                   dest='send_signals',
                   action='store_true',
                   default=False,
                   help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

actions.add_option('--shell-commands',
                   dest='shell_commands',
                   action='store_true',
                   default=False,
                   help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

parser.add_option_group(actions)

developer = OptionGroup(parser, "Developer Tools",
                        "Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.")

developer.add_option('--logging',
                     dest='logging',
                     action='store_true',
                     default=False,
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

developer.add_option('--environment-submit',
                     dest='environment_submit',
                     action='store',
                     default='none',
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

developer.add_option('--environment-start',
                     dest='environment_start',
                     action='store',
                     default='none',
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

developer.add_option('--environment-actions',
                     dest='environment_actions',
                     action='store',
                     default='none',
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

developer.add_option('--environment-finished',
                     dest='environment_finished',
                     action='store',
                     default='none',
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

developer.add_option('--hook-submit',
                     dest='hook_submit',
                     action='store',
                     default='none',
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

developer.add_option('--hook-start',
                     dest='hook_start',
                     action='store',
                     default='none',
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

developer.add_option('--hook-actions',
                     dest='hook_actions',
                     action='store',
                     default='none',
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

developer.add_option('--hook-finished',
                     dest='hook_finished',
                     action='store',
                     default='none',
                     help='Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sollicitudin felis id lobortis dictum. Nullam elementum rhoncus nisl ac faucibus. Curabitur et augue vehicula, elementum lacus ornare, adipiscing massa. Maecenas ut massa posuere, consequat felis quis, interdum orci.')

parser.add_option_group(developer)

(options, args) = parser.parse_args()


''' Run PAS App Maker '''

if len(args) == 1:

    app_name = args[0]

    ''' App Maker Environment Setup '''

    if os.path.exists(options.app_home):
        os.environ['PAS_APP_HOME'] = options.app_home

    elif 'PAS_APP_HOME' in os.environ:
        if not os.path.exists(os.environ['PAS_APP_HOME']):

            sys.stderr.write('You must specify the path to your applications/ directory.\n')
            sys.exit(1)
    else:

        sys.stderr.write('You must specify the path to your applications/ directory.\n')
        sys.exit(1)

    if os.path.exists(options.app_config):
        os.environ['PAS_APP_CONFIG'] = options.app_config

    elif 'PAS_APP_CONFIG' in os.environ:
        if not os.path.exists(os.environ['PAS_APP_CONFIG']):

            sys.stderr.write('You must specify the path to your app-config/ directory.\n')
            sys.exit(1)
    else:

        sys.stderr.write('You must specify the path to your app-config/ directory.\n')
        sys.exit(1)

    app_home = os.environ['PAS_APP_HOME']
    app_config = os.environ['PAS_APP_CONFIG']

    ''' Initial App Setup '''

    app_config_input = open('%s/app-inp.xml' % (app_config), 'r')
    app_config_converter = open('%s/app-conv.xml' % (app_config), 'r')
    app_config_actions = open('%s/app-actions.xml' % (app_config), 'r')

    os.system('mkdir -p %s/%s' % (app_home, app_name))
    os.system('mkdir -p %s/%s/runtime' % (app_home, app_name))
    os.system('mkdir -p %s/%s/submittime' % (app_home, app_name))
    os.system('cp %s/presubmit.py %s/%s/submittime' % (app_config, app_home, app_name))
    os.system('cp %s/start.py %s/%s/runtime' % (app_config, app_home, app_name))
    os.system('cp %s/actions.py %s/%s/runtime' % (app_config, app_home, app_name))

    app_name_input = open('%s/%s/app-inp-%s.xml' % (app_home, app_name, app_name), 'w')
    app_name_converter = open('%s/%s/app-conv-%s.xml' % (app_home, app_name, app_name), 'w')
    app_name_actions = open('%s/%s/app-actions-%s.xml' % (app_home, app_name, app_name), 'w')

    ''' Logging '''

    log = open('%s/%s/build.log' % (app_home, app_name), 'w')

    logging = False

    if options.logging is True:
        logging = True

    ''' Input File '''

    enabled = True

    if logging is True:
        log.write('\n\nMaking Input File\n')

    for line in app_config_input.readlines():

        ''' Special Variable Substitution '''

        line = re.sub('APP_NAME', app_name, line)
        line = re.sub('APP_HOME', app_home, line)
        line = re.sub('APP_CONFIG', app_config, line)

        ''' Select Statement '''

        if re.match('.*PAS_SELECT_STATEMENT BEGIN', line):

            if options.select_statement is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tSelect Statement Enabled: %s' % (line.strip()))

        if re.match('.*PAS_SELECT_STATEMENT END', line):

            if options.select_statement is True:
                pass
            else:
                enabled = True

        ''' Select '''

        if re.match('.*PAS_SELECT BEGIN', line):

            if options.select is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tSelect Enabled: %s' % (line.strip()))

        if re.match('.*PAS_SELECT END', line):

            if options.select is True:
                pass
            else:
                enabled = True

        ''' Ncpus '''

        if re.match('.*PAS_NCPUS BEGIN', line):

            if options.ncpus is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tNcpus Enabled: %s' % (line.strip()))

        if re.match('.*PAS_NCPUS END', line):

            if options.ncpus is True:
                pass
            else:
                enabled = True

        ''' Pcpus '''

        if re.match('.*PAS_PCPUS BEGIN', line):

            if options.pcpus is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tPcpus Enabled: %s' % (line.strip()))

        if re.match('.*PAS_PCPUS END', line):

            if options.pcpus is True:
                pass
            else:
                enabled = True

        ''' Mpiprocs '''

        if re.match('.*PAS_MPIPROCS BEGIN', line):

            if options.mpiprocs is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tMpiprocs: %s' % (line.strip()))

        if re.match('.*PAS_MPIPROCS END', line):

            if options.mpiprocs is True:
                pass
            else:
                enabled = True

        ''' Ompthreads '''

        if re.match('.*PAS_OMPTHREADS BEGIN', line):

            if options.ompthreads is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tOmpthreads Enabled: %s' % (line.strip()))

        if re.match('.*PAS_OMPTHREADS END', line):

            if options.ompthreads is True:
                pass
            else:
                enabled = True

        ''' Mem '''

        if re.match('.*PAS_MEM BEGIN', line):

            if options.mem is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tMem Enabled: %s' % (line.strip()))

        if re.match('.*PAS_MEM END', line):

            if options.mem is True:
                pass
            else:
                enabled = True

        ''' Vmem '''

        if re.match('.*PAS_VMEM BEGIN', line):

            if options.vmem is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tVmem Enabled: %s' % (line.strip()))

        if re.match('.*PAS_VMEM END', line):

            if options.vmem is True:
                pass
            else:
                enabled = True

        ''' Walltime '''

        if re.match('.*PAS_WALLTIME BEGIN', line):

            if options.walltime is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tWalltime Enabled: %s' % (line.strip()))

        if re.match('.*PAS_WALLTIME END', line):

            if options.walltime is True:
                pass
            else:
                enabled = True

        ''' Arch '''

        if re.match('.*PAS_ARCH BEGIN', line):

            if options.arch is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tArch Enabled: %s' % (line.strip()))

        if re.match('.*PAS_ARCH END', line):

            if options.arch is True:
                pass
            else:
                enabled = True

        ''' Place '''

        if re.match('.*PAS_PLACE BEGIN', line):

            if options.place is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tPlace Enabled: %s' % (line.strip()))

        if re.match('.*PAS_PLACE END', line):

            if options.place is True:
                pass
            else:
                enabled = True

        ''' Additional Resources '''

        if re.match('.*PAS_ADDITIONAL_RESOURCES BEGIN', line):

            if options.additional_resources is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tAdditional Resources Enabled: %s' % (line.strip()))

        if re.match('.*PAS_ADDITIONAL_RESOURCES END', line):

            if options.additional_resources is True:
                pass
            else:
                enabled = True

        ''' Depend '''

        if re.match('.*PAS_DEPEND BEGIN', line):

            if options.depend is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tDepend Enabled: %s' % (line.strip()))

        if re.match('.*PAS_DEPEND END', line):

            if options.depend is True:
                pass
            else:
                enabled = True

        ''' Group List '''

        if re.match('.*PAS_GROUP_LIST BEGIN', line):

            if options.group_list is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tGroup List Enabled: %s' % (line.strip()))

        if re.match('.*PAS_GROUP_LIST END', line):

            if options.group_list is True:
                pass
            else:
                enabled = True

        ''' Additional Attributes '''

        if re.match('.*PAS_ADDITIONAL_ATTRIBUTES BEGIN', line):

            if options.additional_attributes is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tAdditional Attributes Enabled: %s' % (line.strip()))

        if re.match('.*PAS_ADDITIONAL_ATTRIBUTES END', line):

            if options.additional_attributes is True:
                pass
            else:
                enabled = True

        ''' Account '''

        if re.match('.*PAS_ACCOUNT BEGIN', line):

            if options.account is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tAccount Enabled: %s' % (line.strip()))

        if re.match('.*PAS_ACCOUNT END', line):

            if options.account is True:
                pass
            else:
                enabled = True

        ''' Queue '''

        if re.match('.*PAS_QUEUE BEGIN', line):

            if options.queue is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tQueue Enabled: %s' % (line.strip()))

        if re.match('.*PAS_QUEUE END', line):

            if options.queue is True:
                pass
            else:
                enabled = True

        ''' Mail '''

        if re.match('.*PAS_MAIL BEGIN', line):

            if options.mail is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tMail Enabled: %s' % (line.strip()))

        if re.match('.*PAS_MAIL END', line):

            if options.mail is True:
                pass
            else:
                enabled = True

        ''' Job Arrays '''

        if re.match('.*PAS_JOB_ARRAYS BEGIN', line):

            if options.job_arrays is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tJob Arrays Enabled: %s' % (line.strip()))

        if re.match('.*PAS_JOB_ARRAYS END', line):

            if options.job_arrays is True:
                pass
            else:
                enabled = True

        ''' Application '''

        if re.match('.*PAS_APPLICATION_NAME BEGIN', line):

            if options.application is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tApplication Enabled: %s' % (line.strip()))

        if re.match('.*PAS_APPLICATION_NAME END', line):

            if options.application is True:
                pass
            else:
                enabled = True

        ''' Environment '''

        if re.match('.*PAS_ENVIRONMENT BEGIN', line):

            if options.environment is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tEnvironment Enabled: %s' % (line.strip()))

        if re.match('.*PAS_ENVIRONMENT END', line):

            if options.environment is True:
                pass
            else:
                enabled = True

        ''' Executable '''

        if re.match('.*PAS_EXECUTABLE_NAME BEGIN', line):

            if options.executable is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tEnvironment Enabled: %s' % (line.strip()))

        if re.match('.*PAS_EXECUTABLE_NAME END', line):

            if options.executable is True:
                pass
            else:
                enabled = True

        ''' Script '''

        if re.match('.*PAS_SCRIPT BEGIN', line):

            if options.script is True:
                enabled = True
            else:
                enabled = False

            if logging is True:
                log.write('\n\tScript Enabled: %s' % (line.strip()))

        if re.match('.*PAS_SCRIPT END', line):

            if options.script is True:
                pass
            else:
                enabled = True

        ''' Arguments '''

        if re.match('.*PAS_ARGUMENTS BEGIN', line):

            if options.arguments is True:
                enabled = True
            else:
                enabled = False

        if re.match('.*PAS_ARGUMENTS END', line):

            if options.arguments is True:
                pass
            else:
                enabled = True

        ''' Input File '''

        if re.match('.*PAS_INPUT_FILE BEGIN', line):

            if options.input_file is True:
                enabled = True
            else:
                enabled = False

        if re.match('.*PAS_INPUT_FILE END', line):

            if options.input_file is True:
                pass
            else:
                enabled = True

        ''' Master File '''

        if re.match('.*PAS_MASTER_FILE BEGIN', line):

            if options.master_file is True:
                enabled = True
            else:
                enabled = False

        if re.match('.*PAS_MASTER_FILE END', line):

            if options.master_file is True:
                pass
            else:
                enabled = True

        ''' Starter File '''

        if re.match('.*PAS_STARTER_FILE BEGIN', line):

            if options.starter_file is True:
                enabled = True
            else:
                enabled = False

        if re.match('.*PAS_STARTER_FILE END', line):

            if options.starter_file is True:
                pass
            else:
                enabled = True

        ''' Engine File '''

        if re.match('.*PAS_ENGINE_FILE BEGIN', line):

            if options.engine_file is True:
                enabled = True
            else:
                enabled = False

        if re.match('.*PAS_ENGINE_FILE END', line):

            if options.engine_file is True:
                pass
            else:
                enabled = True

        ''' Include Files '''

        if re.match('.*PAS_INCLUDE_FILES BEGIN', line):

            if options.include_files is True:
                enabled = True
            else:
                enabled = False

        if re.match('.*PAS_INCLUDE_FILES END', line):

            if options.include_files is True:
                pass
            else:
                enabled = True

        ''' Compress Results '''

        if re.match('.*PAS_COMPRESS_RESULTS BEGIN', line):

            if options.compress_results is True:
                enabled = True
            else:
                enabled = False

        if re.match('.*PAS_COMPRESS_RESULTS END', line):

            if options.compress_results is True:
                pass
            else:
                enabled = True

        ''' Logging '''

        if re.match('.*PAS_LOGGING BEGIN', line):

            if options.logging is True:
                enabled = True
            else:
                enabled = False

        if re.match('.*PAS_LOGGING END', line):

            if options.logging is True:
                pass
            else:
                enabled = True

        if enabled is True:

            if not re.search('.*<!-- .* -->.*', line):
                app_name_input.write(line)

    ''' Converter File '''

    enabled = True

    for line in app_config_converter.readlines():

        ''' Special Variable Substitution '''

        line = re.sub('APP_NAME', app_name, line)
        line = re.sub('APP_HOME', app_home, line)
        line = re.sub('APP_CONFIG', app_config, line)

        ''' Job Arrays '''

        if re.match('.*PAS_JOB_ARRAYS BEGIN', line):

            if options.job_arrays is True:
                enabled = True
            else:
                enabled = False

        if re.match('.*PAS_JOB_ARRAYS END', line):

            if options.job_arrays is True:
                pass
            else:
                enabled = True

        ''' Script '''

        if re.match('.*PAS_SCRIPT BEGIN', line):

            if options.script is True:
                enabled = True
            else:
                enabled = False

        if re.match('.*PAS_SCRIPT END', line):

            if options.script is True:
                pass
            else:
                enabled = True

        ''' Input File '''

        if re.match('.*PAS_INPUT_FILE BEGIN', line):

            if options.input_file is True:
                enabled = True
            else:
                enabled = False

        if re.match('.*PAS_INPUT_FILE END', line):

            if options.input_file is True:
                pass
            else:
                enabled = True

        ''' Master File '''

        if re.match('.*PAS_MASTER_FILE BEGIN', line):

            if options.master_file is True:
                enabled = True
            else:
                enabled = False

        if re.match('.*PAS_MASTER_FILE END', line):

            if options.master_file is True:
                pass
            else:
                enabled = True

        ''' Starter File '''

        if re.match('.*PAS_STARTER_FILE BEGIN', line):

            if options.starter_file is True:
                enabled = True
            else:
                enabled = False

        if re.match('.*PAS_STARTER_FILE END', line):

            if options.starter_file is True:
                pass
            else:
                enabled = True

        ''' Engine File '''

        if re.match('.*PAS_ENGINE_FILE BEGIN', line):

            if options.engine_file is True:
                enabled = True
            else:
                enabled = False

        if re.match('.*PAS_ENGINE_FILE END', line):

            if options.engine_file is True:
                pass
            else:
                enabled = True

        ''' Include Files '''

        if re.match('.*PAS_INCLUDE_FILES BEGIN', line):

            if options.include_files is True:
                enabled = True
            else:
                enabled = False

        if re.match('.*PAS_INCLUDE_FILES END', line):

            if options.include_files is True:
                pass
            else:
                enabled = True

        if enabled is True:

            if not re.search('.*<!-- .* -->.*', line):
                app_name_converter.write(line)

    ''' Actions File '''

    enabled = True

    for line in app_config_actions.readlines():

        ''' Special Variable Substitution '''

        line = re.sub('APP_NAME', app_name, line)
        line = re.sub('APP_HOME', app_home, line)
        line = re.sub('APP_CONFIG', app_config, line)

        ''' Send Signals '''

        if re.match('.*PAS_SEND_SIGNALS BEGIN', line):

            if options.send_signals is True:
                enabled = True
            else:
                enabled = False

        if re.match('.*PAS_SEND_SIGNALS END', line):

            if options.send_signals is True:
                pass
            else:
                enabled = True

        if enabled is True:

            if not re.search('.*<!-- .* -->.*', line):
                app_name_actions.write(line)

    ''' Environments '''

    if not options.environment_submit == 'none':

        environment_submit = open('%s/%s/submittime/environment.submit' % (app_home, app_name), 'w')

        for variable in options.environment_submit.split(','):
            environment_submit.write('%s\n' % (variable))

        environment_submit.close()

    if not options.environment_start == 'none':

        environment_start = open('%s/%s/runtime/environment.start' % (app_home, app_name), 'w')

        for variable in options.environment_start.split(','):
            environment_start.write('%s\n' % (variable))

        environment_start.close()

    if not options.environment_actions == 'none':

        environment_actions = open('%s/%s/runtime/environment.exit' % (app_home, app_name), 'w')

        for variable in options.environment_actions.split(','):
            environment_actions.write('%s\n' % (variable))

        environment_actions.close()

    if not options.environment_finished == 'none':

        exit_environment = open('%s/%s/runtime/environment.exit' % (app_home, app_name), 'w')

        for variable in options.environment_finished.split(','):
            exit_environment.write('%s\n' % (variable))

        exit_environment.close()

    ''' Hooks '''

    if not options.hook_submit == 'none':

        if os.path.exists(options.hook_submit):
            shutil.copy2(options.hook_submit, '%s/%s/submittime/hook.submit' % (app_home, app_name))

    if not options.hook_start == 'none':

        if os.path.exists(options.hook_start):
            shutil.copy2(options.hook_start, '%s/%s/runtime/hook.start' % (app_home, app_name))

    if not options.hook_actions == 'none':

        if os.path.exists(options.hook_actions):
            shutil.copy2(options.hook_actions, '%s/%s/runtime/hook.actions' % (app_home, app_name))

    if not options.hook_finished == 'none':

        if os.path.exists(options.hook_finished):
            shutil.copy2(options.hook_finished, '%s/%s/runtime/hook.finished' % (app_home, app_name))

    ''' Remove PAS Time Stamp File '''

    # I'll handle this better in another release...

    if os.path.exists('/var/spool/pas/repository/time_stamp.txt'):
        os.remove('/var/spool/pas/repository/time_stamp.txt')

    log.close()
    sys.exit(0)

else:

    sys.stderr.write('Incorrect number of arguments. Try pas-appmaker --help for more information.\n')
    sys.exit(1)

sys.stdout.flush()
sys.exit(0)
